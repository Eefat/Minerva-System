@using MinervaSystem.Base.Models
@{
    @Styles.Render("~/Content/kendo.office365")
    ViewBag.HeaderContent = ViewBag.HeaderContent ?? new HeaderContentModel("Supply Order",
        new BreadcrumbModel("Supply Order", new List<LinkModel>() { new LinkModel("/SupplyOrder", "Site Action") }));

}
@Html.Partial("_HeaderContentPartial", (HeaderContentModel)ViewBag.HeaderContent)

@Styles.Render("~/Content/datatables")


<link href="~/Content/telerik/kendo.common-material.min.css" rel="stylesheet" />
<link href="~/Content/telerik/kendo.rtl.min.css" rel="stylesheet" />
<link href="~/Content/telerik/kendo.material.min.css" rel="stylesheet" />
<link href="~/Content/telerik/kendo.material.mobile.min.css" rel="stylesheet" />
<style>
    .table > thead > tr > th {
        background: #605ca8;
        color: #fff;
    }
    .form-control {
        height:auto;
    }
    /*.k-header{background:#ccc;}*/
</style>

<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <form role="form">
                    <div class="box-body">
                        <div class="row">
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtName">Farmer Name</label>
                                    <input type="text" class="form-control" id="txtName" placeholder="Farmer name">
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtMemberKey">Member Key</label>
                                    <input type="text" class="form-control" id="txtMemberKey" placeholder="Member Key">
                                </div>
                            </div>

                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtLandArea">Land Area(Acres)</label>
                                    <input type="text" class="form-control" id="txtLandArea" placeholder="Land Area">
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtEstimatedAmount">Estimated Amount</label>
                                    <input type="text" class="form-control" id="txtEstimatedAmount" placeholder="Estimated Amount">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="ddlSugerMillId">Suger Mill</label>
                                    <select class="form-control" id="ddlSugerMillId"></select>
                                </div>
                            </div>
                            @*<div class='col-sm-3'>
                                    <div class="form-group">
                                        <label for="ddlCaneVariety">Cane Variety</label>
                                        <select class="form-control" id="ddlCaneVariety"></select>
                                    </div>
                                </div>*@
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="ddlPlantRatoon">Plant Ratoon</label>
                                    <select class="form-control" id="ddlPlantRatoon"></select>
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtDateofPlanting">Date of Planting</label>
                                    <input type="text" class="form-control kendo-datepicker" id="txtDateofPlanting" placeholder="Date of Planting">
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtSupplyDate">Supply Date</label>
                                    <input type="text" class="form-control kendo-datepicker" id="txtSupplyDate" placeholder="Supply Date">
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer">
                        <button type="button" class="btn btn-primary" onclick="clearSupplyOrders();">Reset</button>
                        <button type="button" class="btn btn-primary" onclick="searchSupplyOrders();">Search</button>
                    </div>
                    <hr style="margin:0" />
                </form>

                <div class="box-body">
                    <table id="tableSupplyInformation" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0">
                        <thead>
                            <tr>
                                <th width="20%">Farmer Name</th>
                                <th width="10%">Plant/Ratoon</th>
                                <th width="10%">Land Area</th>
                                <th width="20%">Estimated Amount</th>
                                <th width="20%">Date of Planting</th>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

<div id="winViewItem" style="overflow:hidden;">
    <div style="margin:1px; overflow:hidden;">
        <div class="row">
            <label class="col-xs-3 col-form-label">Name:</label>
            <div class="col-sm-3">
                <p id="soFarmerName" class="">dfdfdff</p>
            </div>
        </div>
        <div class="row">
            <label class="col-xs-3 col-form-label">Suger Mill:</label>
            <div class="col-sm-7">
                <p id="soSugerMillName" class="">dfdfdf</p>
            </div>
        </div>
        <div class="row">
            <label class="col-xs-3 col-form-label">Plant/Ratoon:</label>
            <div class="col-sm-7">
                <p id="soPlantRatoon" class="">sdsdsdsdsd</p>
            </div>
        </div>
        <div class="row">
            <label class="col-xs-3 col-form-label">Land Area:</label>
            <div class="col-sm-7">
                <p id="soLandArea" class="">sdsdsds</p>
            </div>
        </div>
        <div class="row">
            <label class="col-xs-3 col-form-label">Estimated Amount:</label>
            <div class="col-sm-7">
                <p id="soTotalAmount" class="">sdsdsdsdsd</p>
            </div>
        </div>
        <div class="form-group row">
            <label for="txtAmountoCollect" class="col-xs-3 col-form-label">Amount to Collect:</label>
            <div class="col-xs-3">
                <input type="text" class="form-control" id="txtAmountoCollect" placeholder="Amount to Collect">
            </div>
        </div>
        <div class="form-group row">
            <label class="col-xs-3 col-form-label">Collection Date:</label>
            <div class="col-xs-7"><input type="text" class="form-control kendo-datetimepicker" id="txtCollectionDate" placeholder="Collection Date"></div>
        </div>
        <div class="form-group row">
            <label class="col-xs-3 col-form-label">Note:</label>
            <div class="col-xs-7"><textarea rows="4" cols="10" class="form-control" id="txtSoNote"></textarea></div>
        </div>
        <hr>
        <div class="modal-btn-toolbar" style="float:right;">
            <button type="button" id="btnSupplyOrderSubmit" value="Submit" class="btn btn-default" style="float:right"><i class="fa fa-check-square-o btn-save"></i> Submit</button>
            <button onclick="winViewItem.close()" class="btn btn-default" style="float:right"><i class="fa fa-ban btn-cancel"></i> Close</button>
        </div>
    </div>
</div>





@section Scripts
{
@*<script src="https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>*@
    @Scripts.Render("~/bundles/DataTables/Allbuttons")
    @Scripts.Render("~/bundles/kendo")


@*<script src="https://cdn.datatables.net/responsive/2.1.0/js/dataTables.responsive.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.1.0/js/responsive.bootstrap.min.js"></script>*@
    <script type="text/javascript" language="javascript">
        var datatable;
        var winAddItem, winEditItem, winViewItem, winDeleteItem;
        var itemId = null;

        $(document).ready(function () {
            $('#example').DataTable();
            populateDropDown();
            SetupSupplyOrdersDataTable();
            SetupPopupBoxes();
        });
        function populateDropDown() {
            getAllSugerMills();
            var optionsCaneVariety = $("#ddlCaneVariety");
            optionsCaneVariety.append($("<option />").val('').text('Select'));
            optionsCaneVariety.append($("<option />").val('0').text('A'));
            optionsCaneVariety.append($("<option />").val('1').text('B'));
            optionsCaneVariety.append($("<option />").val('2').text('C'));
            optionsCaneVariety.append($("<option />").val('3').text('D'));
            optionsCaneVariety.append($("<option />").val('4').text('E'));
            optionsCaneVariety.append($("<option />").val('5').text('F'));

            var optionsPlantRatoon = $("#ddlPlantRatoon");
            optionsPlantRatoon.append($("<option />").val('').text('Select'));
            optionsPlantRatoon.append($("<option />").val('0').text('Plant'));
            optionsPlantRatoon.append($("<option />").val('1').text('Ratoon'));

        }
        function getAllSugerMills() {
            $.ajax({
                url: '@Url.Action("GetAllSugerMillsforDdl", "SugerMill")',
                type: "Post",
                dataType: 'json',
                success: function (response) {
                    var options = $("#ddlSugerMillId");
                    options.append($("<option />").val('').text('Select'));
                    $.each(response.aaData, function (key, value) {
                        options.append($("<option />").val(this.Id).text(this.Name));
                    });
                }, error: function () { }
            });
        }
        function SetupSupplyOrdersDataTable(supplyOrderSearchObj) {
            if (datatable != null) {
                $('#tableSupplyInformation').empty();
            }
            datatable = $("#tableSupplyInformation").DataTable({
                bDestroy: true,
                ajax: {

                    url: '@Url.Action("GetAllSupplyOrders", "SugerMill")',
                    type: "Post",
                    //dataType: 'json',
                    data: supplyOrderSearchObj
                },
                columnDefs: [
                    //{ targets: 0, data: null, orderable: false, class: "details-control", defaultContent: "", render: function (data, type, row) { return "<i class='fa fa-plus-circle' aria-hidden='true'></i>"; } },
                    { targets: 0, data: "Name" },
                    { targets: 1, data: "PlantRatoon", orderable: false },
                    { targets: 2, data: "LandArea", orderable: false },
                    { targets: 3, data: "EstimatedAmount", orderable: false },
                    { targets: 4, data: "DateofPlanting", render: function (data, type, row) { return FormatDateValue(ParseJsonDate(data), { "format": "yyyy-MM-dd" }) } },
                    //{ targets: 4, data: "SupplyDate", render: function (data, type, row) { return FormatDateValue(ParseJsonDate(data), { "format": "yyyy-MM-dd" }) } },
                    { targets: 5, data: null, orderable: false, class: "text-center view-control", render: function (data, type, row) { return "<a onclick='supplyorder.initSupplyOrder(this);'><i id='addHide' class='fa fa-bars'></i></a>"; } },
                    { targets: 6, data: null, orderable: false, class: "text-center edit-control", render: function (data, type, row) { return "<a href='@Url.Action("UpdateSupplyOrder", "SugerMill")/" + row.Id + "'><i class='fa fa-edit'></i></a>"; } },
                    { targets: 7, data: null, orderable: false, class: "text-center delete-control", render: function (data, type, row) { return "<a onclick='itemId=" + row.Id + ";winDeleteItem.center().open();'><i class='fa fa-remove'></i></a>"; } }],
                order: [[1, "asc"]],
                lengthChange: true,
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]]
            });
            new $.fn.dataTable.Buttons(datatable, [
                                               {
                                                   extend: 'excel',
                                                   text: '<span class="fa fa-file-excel-o"></span> Excel',
                                                   exportOptions: {
                                                       modifier: {
                                                           search: 'applied',
                                                           order: 'applied'
                                                       }
                                                   }
                                               },
                                               {
                                                   extend: 'pdf',
                                                   text: '<span class="fa fa-file-pdf-o"></span> PDF',
                                                   exportOptions: {
                                                       modifier: {
                                                           search: 'applied',
                                                           order: 'applied'
                                                       }
                                                   }
                                               },
                                                  {
                                                      extend: 'print',
                                                      text: '<span class="fa fa-print"></span> Print',
                                                      exportOptions: {
                                                          modifier: {
                                                              search: 'applied',
                                                              order: 'applied'
                                                          }
                                                      }
                                                  }
            ]);

            datatable.buttons().container().appendTo($('.col-sm-6:eq(0)', datatable.table().container()));
            datatable.buttons().container().appendTo('#tableSupplyInformation_filter');
        }

        function SetupPopupBoxes() {
            winViewItem = $("#winViewItem").kendoWindow({
                minWidth: 600,
                modal: true,
                visible: false,
                draggable: false,
                title: "Supply Order",
                open: function (obj) {
                },
                close: function () {
                    itemId = null;
                    $("#winViewItem div[id^='view-']").text("");
                }
            }).data("kendoWindow");
        }
        function searchSupplyOrders() {
            var supplyInformationSearchObj = new Object();
            supplyInformationSearchObj.MemberKey = !$("#txtMemberKey").val() ? null : $("#txtMemberKey").val();
            supplyInformationSearchObj.Name = !$("#txtName").val() ? null : $("#txtName").val();
            var landArea = parseFloat($('#txtLandArea').val());
            supplyInformationSearchObj.LandArea = isNaN(landArea) ? null : landArea;
            var estimatedAmount = parseFloat($('#txtEstimatedAmount').val());
            supplyInformationSearchObj.EstimatedAmount = isNaN(estimatedAmount) ? null : estimatedAmount;
            var sugerMillId = parseInt($("#ddlSugerMillId").val());
            supplyInformationSearchObj.SugerMillId = isNaN(sugerMillId) ? null : sugerMillId;
            var caneVariety = parseInt($("#ddlCaneVariety").val());
            supplyInformationSearchObj.CaneVariety = isNaN(caneVariety) ? null : caneVariety;
            var plantRatoon = parseInt($("#ddlPlantRatoon").val());
            supplyInformationSearchObj.PlantRatoon = isNaN(plantRatoon) ? null : plantRatoon;
            supplyInformationSearchObj.DateofPlanting = !$("#txtDateofPlanting").val() ? null : $("#txtDateofPlanting").val();
            supplyInformationSearchObj.SupplyDate = !$("#txtSupplyDate").val() ? null : $("#txtSupplyDate").val();
            if (supplyInformationSearchObj) {
                SetupSupplyOrdersDataTable(supplyInformationSearchObj);
            }
        }

        function clearSupplyOrders() {
            $("#txtMemberKey").val('');
            $("#txtName").val('');
            $("#txtLandArea").val('');
            $("#txtEstimatedAmount").val('');
            $("#ddlSugerMillId").val('');
            $("#ddlCaneVariety").val('');
            $("#ddlPlantRatoon").val('');
            $("#txtSupplyDate").val('');
            $("#txtDateofPlanting").val('');
        }

        var supplyorder = {
            initSupplyOrder: function (obj) {
                var tr = $(obj).closest("tr");
                var supplyOrderData = datatable.row(tr).data();
                $('#btnSupplyOrderSubmit').off('click').click(function () {
                    supplyorder.createSupplyOrder(supplyOrderData);
                });
                winViewItem.center().open();
            },
            createSupplyOrder: function (supplyOrderData) {
                var supplyOrderObj = supplyorder.getSupplyOrderData(supplyOrderData);
                if (supplyorder.validateSupplyOrder(supplyOrderObj)) {
                    $.ajax({
                        url: '@Url.Action("CreateSupplyOrder", "SugerMill")',
                        type: "Post",
                        dataType: 'json',
                        data:supplyOrderObj,
                        success: function (response) {
                            winViewItem.close();
                            supplyorder.sendSMS();
                        }, error: function (response) {

                        }
                    });
                } else alert("Please Enter Required Information.");
            },
            validateSupplyOrder: function (supplyOrderData) {
                var msg = "";
                if (!supplyOrderData.EstimatedAmount || !supplyOrderData.CollectionDate) return false;
                else return true;
            },
            getSupplyOrderData: function (supplyOrderData) {
                var supplyOrderObj = new Object();
                supplyOrderObj.SugerMillId = supplyOrderData.SugerMillId;
                supplyOrderObj.SupplyInformationId = supplyOrderData.Id;
                var CollectedAmount = parseFloat($('#txtAmountoCollect').val());
                supplyOrderObj.EstimatedAmount = isNaN(CollectedAmount) ? null : CollectedAmount;
                supplyOrderObj.CollectionDate = !$("#txtCollectionDate").val() ? null : $("#txtCollectionDate").val();
                supplyOrderObj.Note = !$("#txtSoNote").val() ? null : $("#txtSoNote").val();
                return supplyOrderObj;
            },
            sendSMS: function () {
                // Create Base64 Object
                var Base64 = { _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", encode: function (e) { var t = ""; var n, r, i, s, o, u, a; var f = 0; e = Base64._utf8_encode(e); while (f < e.length) { n = e.charCodeAt(f++); r = e.charCodeAt(f++); i = e.charCodeAt(f++); s = n >> 2; o = (n & 3) << 4 | r >> 4; u = (r & 15) << 2 | i >> 6; a = i & 63; if (isNaN(r)) { u = a = 64 } else if (isNaN(i)) { a = 64 } t = t + this._keyStr.charAt(s) + this._keyStr.charAt(o) + this._keyStr.charAt(u) + this._keyStr.charAt(a) } return t }, decode: function (e) { var t = ""; var n, r, i; var s, o, u, a; var f = 0; e = e.replace(/[^A-Za-z0-9+/=]/g, ""); while (f < e.length) { s = this._keyStr.indexOf(e.charAt(f++)); o = this._keyStr.indexOf(e.charAt(f++)); u = this._keyStr.indexOf(e.charAt(f++)); a = this._keyStr.indexOf(e.charAt(f++)); n = s << 2 | o >> 4; r = (o & 15) << 4 | u >> 2; i = (u & 3) << 6 | a; t = t + String.fromCharCode(n); if (u != 64) { t = t + String.fromCharCode(r) } if (a != 64) { t = t + String.fromCharCode(i) } } t = Base64._utf8_decode(t); return t }, _utf8_encode: function (e) { e = e.replace(/rn/g, "n"); var t = ""; for (var n = 0; n < e.length; n++) { var r = e.charCodeAt(n); if (r < 128) { t += String.fromCharCode(r) } else if (r > 127 && r < 2048) { t += String.fromCharCode(r >> 6 | 192); t += String.fromCharCode(r & 63 | 128) } else { t += String.fromCharCode(r >> 12 | 224); t += String.fromCharCode(r >> 6 & 63 | 128); t += String.fromCharCode(r & 63 | 128) } } return t }, _utf8_decode: function (e) { var t = ""; var n = 0; var r = c1 = c2 = 0; while (n < e.length) { r = e.charCodeAt(n); if (r < 128) { t += String.fromCharCode(r); n++ } else if (r > 191 && r < 224) { c2 = e.charCodeAt(n + 1); t += String.fromCharCode((r & 31) << 6 | c2 & 63); n += 2 } else { c2 = e.charCodeAt(n + 1); c3 = e.charCodeAt(n + 2); t += String.fromCharCode((r & 15) << 12 | (c2 & 63) << 6 | c3 & 63); n += 3 } } return t } }
                // Define the string
                var string = 'itel786:01818856792SMS';
                var encodedString = Base64.encode(string);
                $.ajax({
                    url: "https://api.infobip.com/sms/1/text/single",
                    headers: { 'Authorization': 'Basic aXRlbDc4NjowMTgxODg1Njc5MlNNUw' },
                    type: 'POST',
                    dataType: 'json',
                    data: { "from": "InfoSMS", "to": "8801720211262", "text": "My first Infobip SMS" },
                    success: function (response) {
                        winViewItem.close();

                    }, error: function (response) {
                        console.log(response);
                    }
                });
            }
        }
    </script>
}
