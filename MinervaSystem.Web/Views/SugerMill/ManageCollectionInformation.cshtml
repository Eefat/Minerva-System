@using MinervaSystem.Base.Models
@{
    @Styles.Render("~/Content/kendo.office365")
    ViewBag.HeaderContent = ViewBag.HeaderContent ?? new HeaderContentModel("Supply Information",
        new BreadcrumbModel("Supply Information", new List<LinkModel>() { new LinkModel("/SupplyInformation", "Site Action") }));

}
@Html.Partial("_HeaderContentPartial", (HeaderContentModel)ViewBag.HeaderContent)

<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.css" />
<link href="~/Content/PqGrid/pqgrid.min.css" rel="stylesheet" />
<link href="~/Content/PqGrid/pqgrid.ui.min.css" rel="stylesheet" />
<link href="~/Content/PqGrid/themes/pqgrid.css" rel="stylesheet" />
<style>
    .table > thead > tr > th {
        background: #605ca8;
        color: #fff;
    }
</style>

<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <div id="placeHolder-pageDescription">
                        <a href="@Url.Action("CreateSupplyInformation", "SugerMill")" class="addnew-link">
                            <i class="fa fa-plus-square add-icon"></i> Add new supply
                        </a>
                    </div>
                </div>
                <form role="form">
                    <div class="box-body">
                        <div class="row">
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtName">Farmer Name</label>
                                    <input type="text" class="form-control" id="txtName" placeholder="Farmer name">
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtMemberKey">Member Key</label>
                                    <input type="text" class="form-control" id="txtMemberKey" placeholder="Member Key">
                                </div>
                            </div>

                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtLandArea">Land Area(Acres)</label>
                                    <input type="text" class="form-control" id="txtLandArea" placeholder="Land Area">
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtEstimatedAmount">Estimated Amount</label>
                                    <input type="text" class="form-control" id="txtEstimatedAmount" placeholder="Estimated Amount">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="ddlSugerMillId">Suger Mill</label>
                                    <select class="form-control" id="ddlSugerMillId"></select>
                                </div>
                            </div>
                            @*<div class='col-sm-3'>
                                    <div class="form-group">
                                        <label for="ddlCaneVariety">Cane Variety</label>
                                        <select class="form-control" id="ddlCaneVariety"></select>
                                    </div>
                                </div>*@
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="ddlPlantRatoon">Plant Ratoon</label>
                                    <select class="form-control" id="ddlPlantRatoon"></select>
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtDateofPlanting">Date of Planting</label>
                                    <input type="text" class="form-control kendo-datepicker" id="txtDateofPlanting" placeholder="Date of Planting">
                                </div>
                            </div>
                            <div class='col-sm-3'>
                                <div class="form-group">
                                    <label for="txtSupplyDate">Supply Date</label>
                                    <input type="text" class="form-control kendo-datepicker" id="txtSupplyDate" placeholder="Supply Date">
                                </div>
                            </div>
                        </div>
                        @*<div class="row">
                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <label for="txtSupplyDate">Supply Date</label>
                                        <input type="text" class="form-control kendo-datepicker" id="txtSupplyDate" placeholder="Supply Date">
                                    </div>
                                </div>
                            </div>*@
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer">
                        <button type="button" class="btn btn-primary" onclick="clearSupplyInformation();">Reset</button>
                        <button type="button" class="btn btn-primary" onclick="searchSupplyInformations();">Search</button>
                    </div>
                    <hr style="margin:0" />
                </form>

                <div class="box-body">
                    <table id="tableSupplyInformation" class="table table-bordered table-striped" cellspacing="0">
                        <thead>
                            <tr>
                                <th>&nbsp;</th>
                                <th width="20%">Farmer Name</th>
                                @*<th width="10%">Cane Variety</th>
                                    <th width="10%">Plant/Ratoon</th>
                                    <th width="10%">Land Area</th>*@
                                <th width="20%">Estimated Amount</th>
                                <th width="20%">Date of Planting</th>
                                <th width="20%">Supply Date</th>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                            </tr>
                        </thead>
                        @*<tfoot>
                            <tr>
                                <th>&nbsp;</th>
                                <th>Farmer Name</th>
                                <th>Estimated Amount</th>
                                <th>Date of Planting</th>
                                <th>Supply Date</th>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                            </tr>
                        </tfoot>*@
                    </table>
                </div>
            </div>
        </div>
</section>

<div id="winViewItem">
    <div class="form-group">
        <label class="control-label col-sm-3">Name:</label>
        <div id="view-FarmerName" class="col-sm-7"></div>
    </div><br />
    <div class="form-group">
        <label class="control-label col-sm-3">Cane Variety:</label>
        <div id="view-CaneVariety" class="col-sm-7"></div>
    </div><br />
    <div class="form-group">
        <label class="control-label col-sm-3">Plant/Ratoon:</label>
        <div id="view-PlantRatoon" class="col-sm-7"></div>
    </div><br />
    <div class="form-group">
        <label class="control-label col-sm-3">Land Area:</label>
        <div id="view-LandArea" class="col-sm-7"></div>
    </div><br />
    <div class="form-group">
        <label class="control-label col-sm-3">Estimated Amount:</label>
        <div id="view-EstimatedAmount" class="col-sm-7"></div>
    </div><br />
    <div class="form-group">
        <label class="control-label col-sm-3">Date of Planting:</label>
        <div id="view-DateofPlanting" class="col-sm-7"></div>
    </div><br />
    <div class="form-group">
        <label class="control-label col-sm-3">Supply Date:</label>
        <div id="view-SupplyDate" class="col-sm-7"></div>
    </div>
    <div class="modal-btn-toolbar">
        <button onclick="winViewItem.close()" class="btn btn-default"><i class="fa fa-ban btn-cancel"></i> Close</button>
    </div>
</div>

<div id="winDeleteItem">
    <p>
        The supply information will be permanently deleted and cannot be recovered.<br />
        Are you sure you want to delete the item?
    </p>
    <div class="modal-btn-toolbar">
        <button onclick="DeleteAnnouncement()" class="btn btn-default"><i class="fa fa-close btn-delete"></i> Delete</button>
        <button onclick="winDeleteItem.close()" class="btn btn-default"><i class="fa fa-ban btn-cancel"></i> Cancel</button>
    </div>
</div>


@*<div style="display:none">
        @Html.Partial("~/Views/SugerMill/FarmersListPopup.cshtml")
    </div>*@

@section Scripts
{
    @Scripts.Render("~/bundles/DataTables/Allbuttons")
    @Scripts.Render("~/bundles/kendo")

    <script src="~/Scripts/jquery-ui-1.11.4.min.js"></script>
    <script src="~/Scripts/PqGrid/pqgrid.min.js"></script>
    <script type="text/javascript" language="javascript">
        var datatable;
        var winAddItem, winEditItem, winViewItem, winDeleteItem;
        var itemId = null;

        $(document).ready(function () {
            populateDropDown();
            SetupSupplyInformationsDataTable();
            SetupPopupBoxes();
        });
        function populateDropDown() {
            getAllSugerMills();
            var optionsCaneVariety = $("#ddlCaneVariety");
            optionsCaneVariety.append($("<option />").val('').text('Select'));
            optionsCaneVariety.append($("<option />").val('0').text('A'));
            optionsCaneVariety.append($("<option />").val('1').text('B'));
            optionsCaneVariety.append($("<option />").val('2').text('C'));
            optionsCaneVariety.append($("<option />").val('3').text('D'));
            optionsCaneVariety.append($("<option />").val('4').text('E'));
            optionsCaneVariety.append($("<option />").val('5').text('F'));

            var optionsPlantRatoon = $("#ddlPlantRatoon");
            optionsPlantRatoon.append($("<option />").val('').text('Select'));
            optionsPlantRatoon.append($("<option />").val('0').text('Plant'));
            optionsPlantRatoon.append($("<option />").val('1').text('Ratoon'));

        }
        function getAllSugerMills() {
            $.ajax({
                url: '@Url.Action("GetAllSugerMillsforDdl", "SugerMill")',
                type: "Post",
                dataType: 'json',
                success: function (response) {
                    var options = $("#ddlSugerMillId");
                    options.append($("<option />").val('').text('Select'));
                    $.each(response.aaData, function (key, value) {
                        options.append($("<option />").val(this.Id).text(this.Name));
                    });
                }, error: function () { }
            });
        }
        function SetupSupplyInformationsDataTable(supplyInformationSearchObj) {
            if (datatable != null) {
                $('#tableSupplyInformation').empty();
            }
            datatable = $("#tableSupplyInformation").DataTable({
                bDestroy: true,
                ajax: {

                    url: '@Url.Action("GetAllSupplyInformations", "SugerMill")',
                    type: "Post",
                    //dataType: 'json',
                    data: supplyInformationSearchObj
                },
                columnDefs: [{ targets: 0, data: null, orderable: false, class: "details-control", defaultContent: "", render: function (data, type, row) { return "<i class='fa fa-plus-circle' aria-hidden='true'></i>"; } },
                    { targets: 1, data: "Name" },
                    //{ targets: 2, data: "CaneVariety", orderable: false },
                    //{ targets: 3, data: "PlantRatoon", orderable: false },
                    //{ targets: 4, data: "LandArea", orderable: false },
                    { targets: 2, data: "EstimatedAmount", orderable: false },
                    { targets: 3, data: "DateofPlanting", render: function (data, type, row) { return FormatDateValue(ParseJsonDate(data), { "format": "yyyy-MM-dd" }) } },
                    { targets: 4, data: "SupplyDate", render: function (data, type, row) { return FormatDateValue(ParseJsonDate(data), { "format": "yyyy-MM-dd" }) } },
                    { targets: 5, data: null, orderable: false, class: "text-center view-control", render: function (data, type, row) { return "<a onclick='supplyId=" + row.Id + ";winViewItem.center().open();'><i id='addHide' class='fa fa-bars'></i></a>"; } },
                    { targets: 6, data: null, orderable: false, class: "text-center edit-control", render: function (data, type, row) { return "<a href='@Url.Action("UpdateSupplyInformation", "SugerMill")/" + row.Id + "'><i class='fa fa-edit'></i></a>"; } },
                    { targets: 7, data: null, orderable: false, class: "text-center delete-control", render: function (data, type, row) { return "<a onclick='itemId=" + row.Id + ";winDeleteItem.center().open();'><i class='fa fa-remove'></i></a>"; } }],
                order: [[1, "asc"]],
                lengthChange: true,
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]]
            });
            new $.fn.dataTable.Buttons(datatable, [
                                               {
                                                   extend: 'excel',
                                                   text: '<span class="fa fa-file-excel-o"></span> Excel',
                                                   exportOptions: {
                                                       modifier: {
                                                           search: 'applied',
                                                           order: 'applied'
                                                       }
                                                   }
                                               },
                                               {
                                                   extend: 'pdf',
                                                   text: '<span class="fa fa-file-pdf-o"></span> PDF',
                                                   exportOptions: {
                                                       modifier: {
                                                           search: 'applied',
                                                           order: 'applied'
                                                       }
                                                   }
                                               },
                                                  {
                                                      extend: 'print',
                                                      text: '<span class="fa fa-print"></span> Print',
                                                      exportOptions: {
                                                          modifier: {
                                                              search: 'applied',
                                                              order: 'applied'
                                                          }
                                                      }
                                                  }
            ]);

            datatable.buttons().container()
        .appendTo($('.col-sm-6:eq(0)', datatable.table().container()));
            datatable.buttons().container().appendTo('#tableSupplyInformation_filter');

            $("#tableSupplyInformation tbody").on("click", "td.details-control", function () {
                var tr = $(this).closest("tr");
                var row = datatable.row(tr);

                if (row.child.isShown()) {  // This row is already open, close it
                    row.child.hide();
                    tr.removeClass("shown");
                }
                else {
                    //Close any opened rows
                    var openedTr = $(this).closest("table").find("tr.shown");
                    datatable.row(openedTr).child.hide();
                    openedTr.removeClass("shown");

                    var html = "<table><tr><td style='font-weight: bold;'>Suger Mill:</td><td>&nbsp;</td>";
                    html += "<td style='font-weight: bold;'>Cane Variety :</td><td>&nbsp;" + row.data().CaneVariety + "</td>";
                    html += "<td style='font-weight: bold;'>Plant/Ratoon :</td><td colspan='2'>&nbsp;" + row.data().PlantRatoon + "</td></tr>";
                    html += "<tr><td style='font-weight: bold;'>Land Area :</td><td>&nbsp;" + row.data().LandArea + "</td>";
                    html += "<td>&nbsp;</td><td>&nbsp;</td>";
                    html += "<td>&nbsp;</td></tr>";
                    //html += "<tr><td>Modified:" + FormatDateValue(ParseJsonDate(row.data().Modified), { "format": "dd/MM/yyyy hh:mm tt" }) + "</td>";
                    //html += "<td>Modified By:" + GetJsonColumnValue(row.data().Editor) + "</td><td>&nbsp;</td></tr>";
                    html += "<tr><td style='font-weight: bold;'>Note :</td><td>" + GetJsonColumnValue(row.data().Note) + "</td></tr></table>";

                    row.child(html).show();
                    tr.addClass("shown");

                    //Get Announcement details and open row details
                    //$.ajax({
                    //    url: "/SugerMill/GetSupplyInformationDetails",
                    //    type: "Post",
                    //    data: { supplyInformationId: row.Id },
                    //    async: false, cache: false,
                    //    success: function (response) {
                    //        var html = "<table><tr><th>Created:</th><td>" + FormatDateValue(ParseJsonDate(response.Created), { "format": "MM/dd/yyyy hh:mm tt" }) + "</td></tr>";
                    //        html += "<tr><th>Created By:</th><td>" + GetJsonColumnValue(response.Author) + "</td></tr>";
                    //        html += "<tr><th>Modified:</th><td>" + FormatDateValue(ParseJsonDate(response.Modified), { "format": "MM/dd/yyyy hh:mm tt" }) + "</td></tr>";
                    //        html += "<tr><th>Modified By:</th><td>" + GetJsonColumnValue(response.Editor) + "</td></tr></table>";

                    //        row.child(html).show();
                    //        tr.addClass("shown");
                    //    }, error: function () {
                    //        alert("An error occurred whilst getting the Item Details.");
                    //    }
                    //});
                }
            });
        }

        function SetupPopupBoxes() {
            winViewItem = $("#winViewItem").kendoWindow({
                minWidth: 500,
                modal: true,
                visible: false,
                draggable: false,
                title: "View Farmer",
                open: function () {
                    $.ajax({
                        url: '@Url.Action("GetSupplyInformationDetails", "SugerMill")', type: "Post",
                        data: { farmerId: farmerId },
                        async: false, cache: false,
                        success: function (response) {
                            $("#view-Name").text(response.Name);
                            $("#view-Address").text(response.Address);
                            $("#view-CellPhone").text(response.CellPhone);
                            $("#view-NationalIdNo").text(response.NationalIdNo);
                            $("#view-BirthDate").text(FormatDateValue(ParseJsonDate(response.BirthDate), { "format": "MM/dd/yyyy hh:mm tt" }));
                            $("#view-Division").text(response.Division);
                            $("#view-District").text(response.District);
                            $("#view-Thana").text(response.Thana);
                            $("#view-Village").text(response.Village);
                        }, error: function () { return false; }
                    });
                },
                close: function () {
                    itemId = null;
                    $("#winViewItem div[id^='view-']").text("");
                }
            }).data("kendoWindow");

            winAddItem = $("#winAddItem").kendoWindow({
                minWidth: 500,
                modal: true,
                visible: false,
                draggable: false,
                title: "Add Farmer",
                close: function () {
                    $("#winAddItem *[id^='add-']").val("");
                    $("#winAddItem div.alert").hide();
                }
            }).data("kendoWindow");

            winEditItem = $("#winEditItem").kendoWindow({
                minWidth: 500,
                modal: true,
                visible: false,
                draggable: false,
                title: "Edit Farmer",
                open: function () {
                    $.ajax({
                        url: '@Url.Action("GetFarmerDetails", "SugerMill")', type: "Post",
                        data: { announcementId: itemId },
                        async: false, cache: false,
                        success: function (response) {
                            $("#edit-title").val(response.Title);
                            $("#edit-body").val(response.Body);
                            var datepicker = $("#edit-expires").data("kendoDatePicker");
                            datepicker.value(ParseJsonDate(response.Expires));
                        }, error: function () { return false; }
                    });
                },
                close: function () {
                    itemId = null;
                    $("#winEditItem *[id^='edit-']").val("");
                    $("#winEditItem div.alert").hide();
                }
            }).data("kendoWindow");

            winDeleteItem = $("#winDeleteItem").kendoWindow({
                minWidth: 500,
                modal: true,
                visible: false,
                draggable: false,
                title: "Delete Announcement",
                close: function () { itemId = null; }
            }).data("kendoWindow");
        }

        function AddAnnouncement() {
            var title = $.trim($("#add-title").val());
            var body = $.trim($("#add-body").val());
            var datepicker = $("#add-expires").data("kendoDatePicker");
            var expires = (datepicker.value()) ? datepicker.value().toJSON() : null;

            if (title.length > 0 && body.length > 0) {
                $.ajax({
                    url: '@Url.Action("GetFarmerDetails", "AddFarmer")', type: "Post",
                    data: { title: title, body: body, expires: expires },
                    async: false, cache: false,
                    success: function (response) {
                        winAddItem.close();
                        datatable.ajax.reload();
                        return true;
                    }, error: function () { return false; }
                });
            } else {
                $("#winAddItem div.alert").show();
            }
        }

        function EditAnnouncement() {
            var title = $.trim($("#edit-title").val());
            var body = $.trim($("#edit-body").val());
            var datepicker = $("#edit-expires").data("kendoDatePicker");
            var expires = (datepicker.value()) ? datepicker.value().toJSON() : null;

            if (title.length > 0 && body.length > 0 && itemId != null) {
                $.ajax({
                    url: '@Url.Action("GetFarmerDetails", "EditFarmer")', type: "Post",
                    data: { announcementId: itemId, title: title, body: body, expires: expires },
                    async: false, cache: false,
                    success: function (response) {
                        winEditItem.close();
                        datatable.ajax.reload();
                        return true;
                    }, error: function () { return false; }
                });
            } else {
                $("#winEditItem div.alert").show();
            }
        }

        function DeleteAnnouncement() {
            if (itemId != null) {
                $.ajax({
                    url: '@Url.Action("GetFarmerDetails", "DeleteFarmer")', type: "Post",
                    data: { farmerId: itemId },
                    async: false, cache: false,
                    success: function (response) {
                        winDeleteItem.close();
                        datatable.ajax.reload();
                        return true;
                    }, error: function () { return false; }
                });
            }
        }
        function searchSupplyInformations() {
            var supplyInformationSearchObj = new Object();
            supplyInformationSearchObj.MemberKey = !$("#txtMemberKey").val() ? null : $("#txtMemberKey").val();
            supplyInformationSearchObj.Name = !$("#txtName").val() ? null : $("#txtName").val();
            var landArea = parseFloat($('#txtLandArea').val());
            supplyInformationSearchObj.LandArea = isNaN(landArea) ? null : landArea;
            var estimatedAmount = parseFloat($('#txtEstimatedAmount').val());
            supplyInformationSearchObj.EstimatedAmount = isNaN(estimatedAmount) ? null : estimatedAmount;
            var sugerMillId = parseInt($("#ddlSugerMillId").val());
            supplyInformationSearchObj.SugerMillId = isNaN(sugerMillId) ? null : sugerMillId;
            var caneVariety = parseInt($("#ddlCaneVariety").val());
            supplyInformationSearchObj.CaneVariety = isNaN(caneVariety) ? null : caneVariety;
            var plantRatoon = parseInt($("#ddlPlantRatoon").val());
            supplyInformationSearchObj.PlantRatoon = isNaN(plantRatoon) ? null : plantRatoon;
            supplyInformationSearchObj.DateofPlanting = !$("#txtDateofPlanting").val() ? null : $("#txtDateofPlanting").val();
            supplyInformationSearchObj.SupplyDate = !$("#txtSupplyDate").val() ? null : $("#txtSupplyDate").val();
            if (supplyInformationSearchObj) {
                SetupSupplyInformationsDataTable(supplyInformationSearchObj);
            }
        }

        function clearSupplyInformation() {
            $("#txtMemberKey").val('');
            $("#txtName").val('');
            $("#txtLandArea").val('');
            $("#txtEstimatedAmount").val('');
            $("#ddlSugerMillId").val('');
            $("#ddlCaneVariety").val('');
            $("#ddlPlantRatoon").val('');
            $("#txtSupplyDate").val('');
            $("#txtDateofPlanting").val('');
        }
    </script>
}
