@using MinervaSystem.Base.Models
@{
    ViewBag.Title = "Supply Order";
    @Styles.Render("~/Content/kendo.office365")
    ViewBag.HeaderContent = ViewBag.HeaderContent ?? new HeaderContentModel("Supply Order",
        new BreadcrumbModel("Supply Order", new List<LinkModel>() { new LinkModel("/SupplyInformation", "Site Action") }));

}

@Html.Partial("_HeaderContentPartial", (HeaderContentModel)ViewBag.HeaderContent)

@Styles.Render("~/Content/datatables")
<link href="~/Content/telerik/kendo.common-material.min.css" rel="stylesheet" />
<link href="~/Content/telerik/kendo.rtl.min.css" rel="stylesheet" />
<link href="~/Content/telerik/kendo.material.min.css" rel="stylesheet" />
<link href="~/Content/telerik/kendo.material.mobile.min.css" rel="stylesheet" />
<script src="~/Scripts/Common/date.js"></script>
<style>
    .table > thead > tr > th {
        background: #605ca8;
        color: #fff;
    }

    .child > thead > tr > th {
        background: #cedecf;
        color: #333;
    }

    .form-control {
        height: auto;
    }

    .kendo-datetimepicker {
        width: auto;
    }

    .timePicker {
        width: auto;
    }
</style>

<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <div id="placeHolder-pageDescription">
                        <a href="@Url.Action("CreateSupplyInformation", "SugerMill")" class="addnew-link">
                            <i class="fa fa-plus-square add-icon"></i> Add new supply
                        </a>
                    </div>
                </div>
                <form role="form">
                    <div class="box-body">
                        <div class='col-sm-6'>
                            <div class="row">
                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <label for="txtName">Farmer Name</label>
                                        <input type="text" class="form-control" id="txtName" placeholder="Farmer name">
                                    </div>
                                </div>
                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <label for="txtMemberKey">Member Key</label>
                                        <input type="text" class="form-control" id="txtMemberKey" placeholder="Member Key">
                                    </div>
                                </div>

                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <label for="txtLandArea">Land Area(Acres)</label>
                                        <input type="text" class="form-control" id="txtLandArea" placeholder="Land Area">
                                    </div>
                                </div>
                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <label for="ddlZone">Zone</label>
                                        <select class="form-control" id="ddlZone"></select>
                                    </div>
                                </div>
                                @*<div class='col-sm-3'>
                                        <div class="form-group">
                                            <label for="txtEstimatedAmount">Estimated Yield (Ton)</label>
                                            <input type="text" class="form-control" id="txtEstimatedAmount" placeholder="Estimated Amount">
                                        </div>
                                    </div>*@
                            </div>
                            <div class="row">
                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <label for="ddlSugerMillId">Suger Mill</label>
                                        <select class="form-control" id="ddlSugerMillId"></select>
                                    </div>
                                </div>
                                @*<div class='col-sm-3'>
                                        <div class="form-group">
                                            <label for="ddlCaneVariety">Cane Variety</label>
                                            <select class="form-control" id="ddlCaneVariety"></select>
                                        </div>
                                    </div>*@
                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <label for="ddlPlantRatoon">Plant/Ratoon</label>
                                        <select class="form-control" id="ddlPlantRatoon"></select>
                                    </div>
                                </div>
                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <label for="txtDateofPlanting" style="width:100%">Date of Planting</label>
                                        <input type="text" class="form-control kendo-datepicker" id="txtDateofPlanting" placeholder="Date of Planting">
                                    </div>
                                </div>
                                <div class='col-sm-3'>
                                    <div class="form-group">
                                        <label for="txtSupplyDate">Search Type</label>
                                        <select class="form-control" id="ddlSearchType"></select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class='col-sm-6'>
                            <table class="table table-bordered" id="tblScheduleSummay">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Scheduled Yeild Amount</th>
                                        <th>Remaining</th>
                                    </tr>
                                </thead>
                                <tbody id="scheduleSummayBody">
                                </tbody>
                            </table>
                            <div class="row"><div class="col-sm-7"><div class="dataTables_paginate paging_simple_numbers" id="tableSupplyInformation_paginate"><ul class="pagination"><li class="paginate_button previous disabled" id="tableSupplyInformation_previous"><a href="#" aria-controls="tableSupplyInformation" data-dt-idx="0" tabindex="0">Previous</a></li><li class="paginate_button next disabled" id="tableSupplyInformation_next"><a href="#" aria-controls="tableSupplyInformation" data-dt-idx="1" tabindex="0">Next</a></li></ul></div></div></div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class="box-footer">
                        <button type="button" class="btn btn-primary" id="btnTodaysOrder">Todays Order</button>
                        <button type="button" class="btn btn-primary" onclick="clearSupplyInformation();">Reset</button>
                        <button type="button" class="btn btn-primary" onclick="searchSupplyInformations();">Search</button>
                    </div>
                    <hr style="margin:0" />
                </form>

                <div class="box-body">
                    <table id="tableSupplyInformation" class="table table-striped table-bordered  nowrap" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th width="2%"></th>
                                <th width="10%">Farmer Name</th>
                                @*<th width="10%">Mobile No</th>*@
                                <th width="5%">Zone</th>
                                <th width="10%">Plant/Ratoon</th>
                                <th width="10%">Land (Acres)</th>
                                <th width="10%">Estimated Yield (Ton)</th>
                                <th width="10%">Date of Planting</th>
                                <th width="8%">Cane Age (Month)</th>
                                <th width="5%"></th>
                                <th width="5%"></th>
                                <th>
                                    <input type="checkbox" name="select_all" value="1" id="cbSiSelectAll">
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>


@*<div id="todaysOrderPopup">
        @Html.Partial("~/Views/SugerMill/FarmersListPopup.cshtml")
    </div>*@
<div id="todaysOrderPopup">
    <div style="margin:0">
        <table id="tableSupplyOrder1" class=" table table-striped table-bordered nowrap" cellspacing="0" width="98%">
            <thead>
                <tr>
                    <th width="5%">Code</th>
                    <th width="10%">Farmer</th>
                    <th width="8%">Mobile</th>
                    <th width="10%">Suger Mill</th>
                    <th width="8%">Amount to Collect</th>
                    <th width="8%">Actually Collected</th>
                    <th width="8%">Collection Date</th>
                    <th width="3%">is collected</th>
                    <th width="15%">note</th>
                    <th width="5%"><input type="checkbox" name="select_all" value="1" id="cbTSOSelectAll"></th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<div id="winViewItem" style="overflow:hidden;">
    <div style="margin:1px; overflow:hidden;">
        <div class="row">
            <label class="col-xs-2 col-form-label">Name:</label>
            <div class="col-sm-2">
                <p id="soFarmerName" class=""></p>
            </div>
            <label class="col-xs-2 col-form-label">Suger Mill:</label>
            <div class="col-sm-3">
                <p id="soSugerMillName" class=""></p>
            </div>
        </div>
        <div class="row">
            <label class="col-xs-2 col-form-label">Estimated Yield (Ton):</label>
            <div class="col-sm-2">
                <p id="soTotalEstimatedAmount" class=""></p>
            </div>
            <label class="col-xs-2 col-form-label">Plant/Ratoon:</label>
            <div class="col-sm-3">
                <p id="soPlantRatoon" class=""></p>
            </div>

        </div>
        <div class="row">
            <label class="col-xs-2 col-form-label">Land Area (Acres):</label>
            <div class="col-sm-2">
                <p id="soLandArea" class=""></p>
            </div>
        </div>
        <hr>
        <div class="supplyOrder">
            <div class="row">
                <div class='col-sm-2'>
                    <div class="form-group">
                        <input type="text" class="form-control txtAmountoCollect" placeholder="Yield to Collect">

                    </div>
                </div>
                <div class='col-sm-4' style="padding-right:5px">
                    <div class="form-group">
                        <input type="text" class="form-control kendo-datetimepicker txtCollectionDate" placeholder="Collection Date">
                    </div>

                </div>
                <div class='col-sm-3' style="padding-left:0px">
                    <div class="form-group">
                        <input type="text" class="form-control txtSoNote" placeholder="Note">
                    </div>
                </div>
                <div class="col-xs-1" style="line-height: 2;cursor:pointer">
                    <i class="fa fa-plus" aria-hidden="true" onclick="supplyorder.createSupplyOrderRow(this);"></i>
                </div>
            </div>
        </div>
        <hr>
        <div class="modal-btn-toolbar" style="float:right;">
            <button type="button" id="btnSupplyOrderSubmit" value="Submit" class="btn btn-default" style="float:right"><i class="fa fa-check-square-o btn-save"></i> Submit</button>
            <button onclick="winViewItem.close()" class="btn btn-default" style="float:right"><i class="fa fa-ban btn-cancel"></i> Close</button>
        </div>
    </div>
</div>
<div class="supplyOrderTemplate" style="display:none;">
    <div class="row">
        <div class='col-sm-2'>
            <div class="form-group">
                <input type="text" class="form-control txtAmountoCollect" placeholder="Amount to Collect">
            </div>
        </div>
        <div class='col-sm-4' style="padding-right:5px">
            <div class="form-group">
                <input type="text" class="form-control timePicker txtCollectionDate" placeholder="Collection Date">
            </div>

        </div>
        <div class='col-sm-3' style="padding-left:0px">
            <div class="form-group">
                <input type="text" class="form-control txtSoNote" placeholder="Note">
            </div>
        </div>
        <div class="col-xs-1" style="line-height: 2;cursor:pointer">
            <i class="fa fa-plus" aria-hidden="true" onclick="supplyorder.createSupplyOrderRow(this);"></i>
        </div>
    </div>
</div>
<div id="winDeleteItem">
    <p>
        The supply information will get deleted permanently and can not be recovered.<br />
        Are you sure that you want to delete the item?
    </p>
    <div class="modal-btn-toolbar">
        <button onclick="DeleteSupplyInfo()" class="btn btn-default"><i class="fa fa-close btn-delete"></i> Delete</button>
        <button onclick="winDeleteItem.close()" class="btn btn-default"><i class="fa fa-ban btn-cancel"></i> Cancel</button>
    </div>
</div>

<div id="winViewItemSo" style="overflow:hidden;">
    <div style="margin:1px; overflow:hidden;">
        <div class="row">
            <label class="col-xs-3 col-form-label">Name:</label>
            <div class="col-sm-3">
                <p id="soeFarmerName" class=""></p>
            </div>
        </div>
        <div class="row">
            <label class="col-xs-3 col-form-label">Suger Mill:</label>
            <div class="col-sm-7">
                <p id="soeSugerMillName" class=""></p>
            </div>
        </div>
        <div class="row">
            <label class="col-xs-3 col-form-label">Plant/Ratoon:</label>
            <div class="col-sm-7">
                <p id="soePlantRatoon" class=""></p>
            </div>
        </div>
        <div class="row">
            <label class="col-xs-3 col-form-label">Land Area:</label>
            <div class="col-sm-7">
                <p id="soeLandArea" class=""></p>
            </div>
        </div>
        <div class="row">
            <label class="col-xs-3 col-form-label">Estimated Amount:</label>
            <div class="col-sm-7">
                <p id="soeTotalEstimatedAmount" class=""></p>
            </div>
        </div>
        <div class="form-group row">
            <label for="txtAmountoCollect" class="col-xs-3 col-form-label">Amount to Collect:</label>
            <div class="col-xs-3">
                <input type="text" class="form-control" id="txtAmountoCollect" placeholder="Amount to Collect">
            </div>
        </div>
        <div class="form-group row">
            <label for="txtActuallyCollected" class="col-xs-3 col-form-label">Actually Collected:</label>
            <div class="col-xs-3">
                <input type="text" class="form-control" id="txtActuallyCollected" placeholder="Actually Collected">
            </div>
        </div>
        <div class="form-group row">
            <label class="col-xs-3 col-form-label">Collection Date:</label>
            <div class="col-xs-7"><input type="text" class="form-control kendo-datetimepicker" id="txtCollectionDate" placeholder="Collection Date"></div>
        </div>
        <div class="form-group row">
            <label class="col-xs-3 col-form-label">Note:</label>
            <div class="col-xs-7"><textarea rows="4" cols="10" class="form-control" id="txtSoNote"></textarea></div>
        </div>
        <div class="form-group row">
            <label class="col-xs-3 col-form-label">Is Collected:</label>
            <div class="col-xs-7"><input type="checkbox" id="cbIsCollected" name="isCollected" value="IsCollected"></div>
        </div>
        <hr>
        <div class="modal-btn-toolbar" style="float:right;">
            <button type="button" id="btnSupplyOrderEdit" value="Submit" class="btn btn-default" style="float:right"><i class="fa fa-check-square-o btn-save"></i> Submit</button>
            <button onclick="winViewItemSo.close()" class="btn btn-default" style="float:right"><i class="fa fa-ban btn-cancel"></i> Close</button>
        </div>
    </div>
</div>

<table id="tableSupplyOrder" class="table table-striped table-bordered dt-responsive nowrap child" cellspacing="0" style="display:none;">
    <thead>
        <tr>
            <th width="5%">Code</th>
            <th width="8%">Amount to Collect</th>
            <th width="8%">Collected Amount</th>
            <th width="8%">Collection Date</th>
            <th width="10%">Note</th>
            <th width="8%">Is Collected</th>
            <th>&nbsp;</th>
            <th><input type="checkbox" name="select_all" value="1" id="cbSoSelectAll"></th>
        </tr>
    </thead>
</table>

@section Scripts
{
    @Scripts.Render("~/bundles/DataTables/Allbuttons")
    @Scripts.Render("~/bundles/kendo")
    <script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.8.4/moment.min.js"></script>
    <script src="~/Scripts/DataTables/moment-with-locales.min.js"></script>
    <script src="//cdn.datatables.net/plug-ins/3cfcc339e89/sorting/datetime-moment.js"></script>
    <script type="text/javascript" language="javascript">
        var datatable;
        var datatable1;
        var winAddItem, winEditItem, winViewItem, winDeleteItem, winTodaysOrder, winViewItemSo;
        var itemId = null;

        $(document).ready(function () {
            utility.addActiveLink('sOrderSideBarMenu');
            utility.loadScheduledSummayTable('@Url.Action("GetSchedulerTotalSummary", "SugerMill")');
            populateDropDown();
            SetupSupplyInformationsDataTable();
            SetupPopupBoxes();
            utility.loadDateSorting();
            $('#btnTodaysOrder').off('click').on('click', function () {
                winTodaysOrder.center().open();
                //$('#myWindow').parent().find('.k-window-titlebar,.k-window-actions').css('backgroundColor', '#fe2712');
            });
        });
        function populateDropDown() {
            getAllSugerMills();
            var optionsCaneVariety = $("#ddlCaneVariety");
            optionsCaneVariety.append($("<option />").val('').text('Select'));
            optionsCaneVariety.append($("<option />").val('0').text('ISD 1/53'));
            optionsCaneVariety.append($("<option />").val('1').text('ISD 1/54'));
            optionsCaneVariety.append($("<option />").val('2').text('ISD 16'));
            optionsCaneVariety.append($("<option />").val('3').text('ISD 17'));
            optionsCaneVariety.append($("<option />").val('4').text('ISD 18'));
            optionsCaneVariety.append($("<option />").val('5').text('ISD 19'));
            optionsCaneVariety.append($("<option />").val('6').text('ISD 20'));
            optionsCaneVariety.append($("<option />").val('7').text('ISD 25'));
            optionsCaneVariety.append($("<option />").val('8').text('ISD 28'));
            optionsCaneVariety.append($("<option />").val('9').text('LJC'));

            var optionsPlantRatoon = $("#ddlPlantRatoon");
            optionsPlantRatoon.append($("<option />").val('').text('Select'));
            optionsPlantRatoon.append($("<option />").val('0').text('Plant'));
            optionsPlantRatoon.append($("<option />").val('1').text('Ratoon'));

            var optionsPlantRatoon = $("#ddlSearchType");
            optionsPlantRatoon.append($("<option />").val('').text('All'));
            optionsPlantRatoon.append($("<option />").val('1').text('Supply Order'));

            var optionsZone = $("#ddlZone");
            optionsZone.append($("<option />").val('').text('Select'));
            optionsZone.append($("<option />").val('0').text('Zone 1'));
            optionsZone.append($("<option />").val('1').text('Zone 2'));
            optionsZone.append($("<option />").val('1').text('Zone 3'));
            optionsZone.append($("<option />").val('1').text('Zone 4'));

        }
        function getAllSugerMills() {
            $.ajax({
                url: '@Url.Action("GetAllSugerMillsforDdl", "SugerMill")',
                type: "Post",
                dataType: 'json',
                success: function (response) {
                    var options = $("#ddlSugerMillId");
                    options.append($("<option />").val('').text('Select'));
                    $.each(response.aaData, function (key, value) {
                        options.append($("<option />").val(this.Id).text(this.Name));
                    });
                }, error: function () { }
            });
        }
        var test;
        function SetupSupplyInformationsDataTable(supplyInformationSearchObj) {
            if (datatable != null) {
                $('#tableSupplyInformation').empty();
            }

            datatable = $("#tableSupplyInformation").DataTable({
                scrollX: true,
                bDestroy: true,
                initComplete: function (settings, json) {
                    supplyOrder1.smsData = json.smsData;
                    supplyOrder1.initSupplyInformationCheckBox(datatable);
                    $('#tableSupplyInformation_length').parent().removeClass('col-sm-6').addClass('col-sm-2');
                    $('#tableSupplyInformation_filter').parent().removeClass('col-sm-6').addClass('col-sm-8').css('float', 'right');
                    //datatable.order([7, 'dsc']).draw();
                },
                ajax: {

                    url: '@Url.Action("GetAllSupplyInformations", "SugerMill")',
                    type: "Post",
                    //dataType: 'json',
                    data: supplyInformationSearchObj
                },
                aoColumns: [null, null, null, null, { "sClass": "a-right" }, { "sClass": "a-right" }, { "sType": "date-uk", "sClass": "a-center" }, { "sClass": "a-right" }, null, null],
                columnDefs: [
                    {
                        data: null,
                        targets: 0,
                        searchable: false,
                        orderable: false,
                        className: 'dt-body-center',
                        render: function (data, type, full, meta) {
                            return '<i class="fa fa-plus-circle details-control" style="cursor:pointer;"></i>';
                        }
                    },
                    { targets: 1, data: "Name" },
                    //{ targets: 2, data: "MobileNo", orderable: false },
                    { targets: 2, data: "Zone", orderable: false },
                    { targets: 3, data: "PlantRatoon", orderable: false },
                    { targets: 4, data: "LandArea", orderable: false },
                    { targets: 5, data: "EstimatedAmount", orderable: false },
                    {
                        targets: 6, data: "DateofPlanting", render: function (data, type, row) {

                            return FormatDateValue(ParseJsonDate(data), { "format": "dd/MM/yyyy" });
                        }
                    },
                    {
                        targets: 7, render: function (data, type, row) {
                            var totalmonth = 0;
                            if (row.DateofPlanting) {
                                var from = FormatDateValue(ParseJsonDate(row.DateofPlanting)).split("/");
                                var startdate = new Date(from[2], from[0], from[1]);
                                totalmonth = utility.monthDiff(startdate, new Date());
                            }
                            return totalmonth;
                        }
                    },
                    {
                        targets: 8, data: null, orderable: false, class: "text-center view-control",
                        render: function (data, type, row) {
                            var totalmonth = 0;
                            if (row.DateofPlanting) {
                                var from = FormatDateValue(ParseJsonDate(row.DateofPlanting)).split("/");
                                var startdate = new Date(from[2], from[0], from[1]);
                                totalmonth = utility.monthDiff(startdate, new Date());
                            }
                            if ((row.PlantRatoon == 'Plant' && totalmonth >= 12) || (row.PlantRatoon == 'Ratoon' && totalmonth >= 12 && totalmonth <= 14)) {
                                return "<a onclick='supplyorder.initSupplyOrder(this);' style='cursor:pointer' title='Schedule'><i id='addHide' class='fa fa-bars'></i></a>";
                            } else return "<i id='addHide' class='fa fa-bars'></i>";

                        }
                    },
                    { targets: 9, data: null, orderable: false, class: "text-center edit-control", render: function (data, type, row) { return "<a href='@Url.Action("UpdateSupplyInformation", "SugerMill")/" + row.Id + "' style='cursor:pointer' title='Edit'><i class='fa fa-edit'></i></a>"; } },
                    {
                        data: null,
                        targets: 10,
                        searchable: false,
                        orderable: false,
                        className: 'dt-body-center',
                        render: function (data, type, full, meta) {
                            return '<input type="checkbox" class="siCB" name="id[]" value="' + $('<div/>').text(data).html() + '">';
                        }
                    },
                ],
                order: [[7, "asc"]],
                lengthChange: true,
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]]
            });
            new $.fn.dataTable.Buttons(datatable, [

                                                {
                                                    text: 'Send Sms',
                                                    action: function (e, dt, node, config) {
                                                        supplyOrder1.sendBulkSMSsi(datatable);
                                                    }
                                                },
                                                 {
                                                     text: 'Delete',
                                                     action: function (e, dt, node, config) {
                                                         supplyOrder1.deleteBulkSI(datatable, '@Url.Action("DeleteSupplyInformation", "SugerMill")');
                                                     }
                                                 },
                                               {
                                                   extend: 'excel',
                                                   text: '<span class="fa fa-file-excel-o"></span> Excel',
                                                   exportOptions: {
                                                       modifier: {
                                                           search: 'applied',
                                                           order: 'applied'
                                                       }
                                                   }
                                               },
                                               {
                                                   extend: 'pdf',
                                                   text: '<span class="fa fa-file-pdf-o"></span> PDF',
                                                   exportOptions: {
                                                       modifier: {
                                                           search: 'applied',
                                                           order: 'applied'
                                                       }
                                                   }
                                               },
                                                  {
                                                      extend: 'print',
                                                      text: '<span class="fa fa-print"></span> Print',
                                                      exportOptions: {
                                                          modifier: {
                                                              search: 'applied',
                                                              order: 'applied'
                                                          }
                                                      }
                                                  }
            ]);

            datatable.buttons().container().appendTo($('.col-sm-6:eq(0)', datatable.table().container()));
            datatable.buttons().container().appendTo('#tableSupplyInformation_filter');

            $("#tableSupplyInformation tbody").on("click", "i.details-control", function () {

                var tr = $(this).closest("tr");
                var row = datatable.row(tr);
                //var rowData = datatable.row(tr).data();

                if (row.child.isShown()) {  // This row is already open, close it
                    row.child.hide();
                    $(this).removeClass('fa-minus-circle').addClass('fa-plus-circle');
                }
                else {

                    //Close any opened rows
                    var openedTr = $(this).closest("table").find("tr.shown");
                    datatable.row(openedTr).child.hide();
                    openedTr.removeClass("shown");

                    if (row.child.isShown()) {
                        row.child.hide();
                        tr.removeClass("shown");
                        $(this).removeClass('fa-minus-circle').addClass('fa-plus-circle');
                    }
                    else {
                        $(this).removeClass('fa-plus-circle').addClass('fa-minus-circle');
                        var table = $('<table id="childTable" class="table table-striped table-bordered dt-responsive nowrap child"></table>');
                        table.html($('#tableSupplyOrder').html());
                        test = table.DataTable({
                            bDestroy: true,
                            paging: false,
                            initComplete: function (settings, json) {
                                row.child(table).show();
                                tr.addClass("shown");
                                supplyOrder1.initSupplyOrderCheckBox(test);
                                test.buttons().container().insertBefore($('.col-sm-6:eq(0)', test.table().container()));
                                test.buttons().container().insertBefore('#childTable');

                            },
                            ajax: {
                                url: '@Url.Action("GetAllSupplyOrderbySupplyInfoId", "SugerMill")',
                                type: "POST",
                                data: { supplyInfoId: row.data().Id },
                            },
                            columnDefs: [
                                { targets: 0, data: "Code" },
                                { targets: 1, data: "AmounttoCollect", orderable: true },
                                { targets: 2, data: "CollectedAmount", orderable: false },
                                {
                                    targets: 3, data: "CollectionDate", render: function (data, type, row) {
                                        return FormatDateValue(ParseJsonDate(data), { "format": "dd/MM/yyyy hh:mm tt" })
                                    }
                                },
                                { targets: 4, data: "Note", orderable: false },
                                { targets: 5, data: "IsCollected", orderable: false },
                                { targets: 6, data: null, orderable: false, class: "text-center view-control", render: function (data, type, row) { return "<i class='fa fa-edit' onclick='supplyorder.initEditSupplyOrder(this);' style='cursor:pointer'></i>"; } },
                                {
                                    targets: 7,
                                    searchable: false,
                                    orderable: false,
                                    className: 'dt-body-center',
                                    render: function (data, type, full, meta) {
                                        return '<input type="checkbox" class="childCB" name="id[]" value="' + $('<div/>').text(data).html() + '">';
                                    }
                                },

                            ],
                            order: [[1, "asc"]],
                            //lengthChange: true,
                            //lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]]
                        });
                        new $.fn.dataTable.Buttons(test, [

                                                {
                                                    text: 'Send Sms',
                                                    action: function (e, dt, node, config) {
                                                        supplyOrder1.sendBulkSMSsO(test);
                                                    }
                                                },
                                                {
                                                    text: 'Delete',
                                                    action: function (e, dt, node, config) {
                                                        supplyOrder1.deleteBulkSO(test, '@Url.Action("DeleteSupplyOrder", "SugerMill")', tr);
                                                    }
                                                },

                                               {
                                                   extend: 'excel',
                                                   text: '<span class="fa fa-file-excel-o"></span> Excel',
                                                   exportOptions: {
                                                       modifier: {
                                                           search: 'applied',
                                                           order: 'applied'
                                                       }
                                                   }
                                               },
                                               {
                                                   extend: 'pdf',
                                                   text: '<span class="fa fa-file-pdf-o"></span> PDF',
                                                   exportOptions: {
                                                       modifier: {
                                                           search: 'applied',
                                                           order: 'applied'
                                                       }
                                                   }
                                               },
                                                  {
                                                      extend: 'print',
                                                      text: '<span class="fa fa-print"></span> Print',
                                                      exportOptions: {
                                                          modifier: {
                                                              search: 'applied',
                                                              order: 'applied'
                                                          }
                                                      }
                                                  }
                        ]);
                    }

                }
            });
        }

        function SetupPopupBoxes() {
            winViewItem = $("#winViewItem").kendoWindow({
                minWidth: 600,
                modal: true,
                visible: false,
                draggable: true,
                actions: ["Pin", "Minimize", "Maximize", "Close"],
                title: "Supply Order",
                open: function (obj) {
                },
                close: function () {
                    itemId = null;
                    $('.supplyOrder').html('');
                    $('.supplyOrder').append($('.supplyOrderTemplate').html());
                    $('.supplyOrder').find('.timePicker').last().kendoDateTimePicker({
                        value: new Date(),
                        format: "dd/MM/yyyy hh:mm tt",
                        interval: 15
                    });
                }
            }).data("kendoWindow");

            winDeleteItem = $("#winDeleteItem").kendoWindow({
                minWidth: 500,
                modal: true,
                visible: false,
                draggable: false,
                title: "Delete Announcement",
                close: function () { itemId = null; }
            }).data("kendoWindow");

            winTodaysOrder = $("#todaysOrderPopup").kendoWindow({
                minWidth: 700,
                modal: true,
                visible: false,
                draggable: true,
                actions: ["Pin", "Minimize", "Maximize", "Close"],
                title: "Todays Order",
                open: function () {
                    //$("#tableSupplyOrder").DataTable();
                    //supplyorder.loadTodaysSupplyOrder();
                    SetupAnnouncementsDataTable();
                },
                close: function () {
                    itemId = null;
                    $("#winViewItem div[id^='view-']").text("");
                }
            }).data("kendoWindow");
            winViewItemSo = $("#winViewItemSo").kendoWindow({
                minWidth: 600,
                modal: true,
                visible: false,
                draggable: false,
                title: "Supply Order",
                open: function (obj) {
                },
                close: function () {
                    itemId = null;
                    $("#winViewItem div[id^='view-']").text("");
                }
            }).data("kendoWindow");
        }

        function DeleteSupplyInfo() {
            if (itemId != null) {
                $.ajax({
                    url: '@Url.Action("GetFarmerDetails", "SugerMill")', type: "Post",
                    data: { farmerId: itemId },
                    async: false, cache: false,
                    success: function (response) {
                        winDeleteItem.close();
                        datatable.ajax.reload();
                        return true;
                    }, error: function () { return false; }
                });
            }
        }
        function searchSupplyInformations() {
            var supplyInformationSearchObj = new Object();
            supplyInformationSearchObj.MemberKey = !$("#txtMemberKey").val() ? null : $("#txtMemberKey").val();
            supplyInformationSearchObj.Name = !$("#txtName").val() ? null : $("#txtName").val();
            var landArea = parseFloat($('#txtLandArea').val());
            supplyInformationSearchObj.LandArea = isNaN(landArea) ? null : landArea;
            var estimatedAmount = parseFloat($('#txtEstimatedAmount').val());
            supplyInformationSearchObj.EstimatedAmount = isNaN(estimatedAmount) ? null : estimatedAmount;
            var sugerMillId = parseInt($("#ddlSugerMillId").val());
            supplyInformationSearchObj.SugerMillId = isNaN(sugerMillId) ? null : sugerMillId;
            var caneVariety = parseInt($("#ddlCaneVariety").val());
            supplyInformationSearchObj.CaneVariety = isNaN(caneVariety) ? null : caneVariety;
            var plantRatoon = parseInt($("#ddlPlantRatoon").val());
            var zone = parseInt($("#ddlZone").val());
            supplyInformationSearchObj.Zone = isNaN(zone) ? null : zone;
            supplyInformationSearchObj.PlantRatoon = isNaN(plantRatoon) ? null : plantRatoon;
            supplyInformationSearchObj.DateofPlanting = !$("#txtDateofPlanting").val() ? null : $("#txtDateofPlanting").val();
            supplyInformationSearchObj.SearchType = !$("#ddlSearchType").val() ? null : $("#ddlSearchType").val();
            if (supplyInformationSearchObj) {
                SetupSupplyInformationsDataTable(supplyInformationSearchObj);
            }
        }

        function clearSupplyInformation() {
            $("#txtMemberKey").val('');
            $("#txtName").val('');
            $("#txtLandArea").val('');
            $("#txtEstimatedAmount").val('');
            $("#ddlSugerMillId").val('');
            $("#ddlCaneVariety").val('');
            $("#ddlPlantRatoon").val('');
            $("#ddlSearchType").val('');
            $("#txtDateofPlanting").val('');
            $("#ddlZone").val('');
        }

        var supplyorder = {
            initSupplyOrder: function (obj) {
                var tr = $(obj).closest("tr");
                var supplyOrderData = datatable.row(tr).data();
                supplyorder.clearSupplyOrderData();
                supplyorder.loadSupplyOrderPopup(supplyOrderData);
                $('#btnSupplyOrderSubmit').off('click').click(function () {
                    supplyorder.createSupplyOrder(supplyOrderData, tr);
                });

                winViewItem.center().open();
            },
            initEditSupplyOrder: function (obj) {
                var tr = $(obj).closest("tr");
                var parentTr = $("#childTable").closest("tr").prev("tr");
                var supplyOrderData = test.row(tr).data();
                supplyorder.clearSupplyOrderData();
                supplyorder.loadSupplyOrderPopupEdit(supplyOrderData);
                $('#btnSupplyOrderEdit').off('click').click(function () {
                    supplyorder.editSupplyOrder(supplyOrderData, parentTr);
                });
                winViewItemSo.center().open();
            },
            createSupplyOrderRow: function (addRow) {
                $('.supplyOrder').append($('.supplyOrderTemplate').html());
                $(addRow).removeClass('fa-plus').addClass('fa-minus');
                $(addRow).attr("onclick", "supplyorder.deleteSupplyOrderRow(this)");
                $('.supplyOrder').find('.txtCollectionDate').last().kendoDateTimePicker({
                    value: new Date(),
                    format: "dd/MM/yyyy hh:mm tt",
                    interval: 15
                });
            },
            deleteSupplyOrderRow: function (addRow) {
                if ($('.supplyOrder').children().length > 1) $(addRow).closest('.row').remove();
            },
            loadSupplyOrderPopupEdit: function (supplyOrderData) {
                $("#soeFarmerName").text(supplyOrderData.Name);
                $("#soeSugerMillName").text(supplyOrderData.SugerMillName);
                $("#soePlantRatoon").text(supplyOrderData.PlantRatoon);
                $("#soeLandArea").text(supplyOrderData.LandArea);
                $("#soeTotalEstimatedAmount").text(supplyOrderData.EstimatedAmount);
                $("#txtAmountoCollect").val(supplyOrderData.AmounttoCollect);
                $("#txtSoNote").val(supplyOrderData.Note);
                $("#txtCollectionDate").val(FormatDateValue(ParseJsonDate(supplyOrderData.CollectionDate), { "format": "dd/MM/yyyy hh:mm tt" }));
            },
            loadSupplyOrderPopup: function (supplyOrderData) {
                $("#soFarmerName").text(supplyOrderData.Name);
                $("#soSugerMillName").text(supplyOrderData.SugerMillName);
                $("#soPlantRatoon").text(supplyOrderData.PlantRatoon);
                $("#soLandArea").text(supplyOrderData.LandArea);
                $("#soTotalEstimatedAmount").text(supplyOrderData.EstimatedAmount);
            },
            createSupplyOrder: function (supplyOrderData, tr) {
                var listSupplyOrderRequest = supplyorder.getSupplyOrderData(supplyOrderData);
                var isError = supplyorder.validateSupplyOrder(listSupplyOrderRequest);
                things = JSON.stringify({ 'things': listSupplyOrderRequest });
                if (!isError) {
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        url: '@Url.Action("PassThings", "SugerMill")',
                        type: "POST",
                        dataType: 'json',
                        data: things,
                        success: function (response) {
                            if (response.status == 0) {
                                winViewItem.close();
                                if ($(tr).find("i.details-control").hasClass('fa-plus-circle')) $(tr).find("i.details-control").click();
                                else {
                                    $(tr).find("i.details-control").click();
                                    $(tr).find("i.details-control").click();
                                }
                            } else {
                                alert(response.responseMsg);
                            }

                        }, error: function (response) {
                            alert("Error occured!!! Contact to admonistrator!!!");
                        }
                    });
                } else alert("Please Enter Required Information.");
            },
            editSupplyOrder: function (supplyOrderData, parentTr) {
                var supplyOrderObj = supplyorder.getSupplyOrderDataSingle(supplyOrderData);
                if (supplyorder.validateSupplyOrderSingle(supplyOrderObj)) {
                    $.ajax({
                        url: '@Url.Action("UpdateSupplyOrder", "SugerMill")',
                        type: "Post",
                        dataType: 'json',
                        data: supplyOrderObj,
                        success: function (response) {
                            winViewItemSo.close();
                            $(parentTr).find("i.details-control").click();
                            $(parentTr).find("i.details-control").click();
                        }, error: function (response) {
                            alert(response.responseMsg);
                        }
                    });
                } else alert("Please Enter Required Information.");
            },
            validateSupplyOrderSingle: function (supplyOrderData) {
                var msg = "";
                if (!supplyOrderData.EstimatedAmount || !supplyOrderData.CollectionDate) return false;
                else return true;
            },
            validateSupplyOrder: function (listSupplyOrderRequest) {
                var msg = "";
                if (listSupplyOrderRequest.length > 0) {
                    $.each(listSupplyOrderRequest, function (i) {
                        var supplyOrderData = listSupplyOrderRequest[i];
                        if (!supplyOrderData.EstimatedAmount || !supplyOrderData.CollectionDate) {
                            msg = "error";
                        }
                    });
                    if (msg) return true;
                    else false;
                } else {
                    return false;
                }

            },
            getSupplyOrderDataSingle: function (supplyOrderData) {
                var supplyOrderObj = new Object();
                supplyOrderObj.Id = supplyOrderData.Id;
                supplyOrderObj.SugerMillId = supplyOrderData.SugerMillId;
                supplyOrderObj.SupplyInformationId = supplyOrderData.SupplyInformationId;
                supplyOrderObj.MobileNo = supplyOrderData.MobileNo;
                var collectedAmount = parseFloat($('#txtAmountoCollect').val());
                supplyOrderObj.EstimatedAmount = isNaN(collectedAmount) ? null : collectedAmount;
                var actuallyCollected = parseFloat($('#txtActuallyCollected').val());
                supplyOrderObj.CollectedAmount = isNaN(actuallyCollected) ? null : actuallyCollected;
                supplyOrderObj.CollectionDate = !$("#txtCollectionDate").val() ? null : $("#txtCollectionDate").val();
                supplyOrderObj.Note = !$("#txtSoNote").val() ? null : $("#txtSoNote").val();
                supplyOrderObj.IsCollected = $('#cbIsCollected').prop('checked');
                return supplyOrderObj;
            },
            getSupplyOrderData: function (supplyOrderData) {
                var listSupplyOrderRequest = [];
                $('.supplyOrder .row').each(function () {
                    var SupplyOrderRequest = {};
                    SupplyOrderRequest.SugerMillId = supplyOrderData.SugerMillId;
                    SupplyOrderRequest.SupplyInformationId = supplyOrderData.Id;
                    SupplyOrderRequest.MobileNo = supplyOrderData.MobileNo;
                    SupplyOrderRequest.MemberKey = supplyOrderData.MemberKey;
                    SupplyOrderRequest.MemberName = supplyOrderData.Name;
                    var CollectedAmount = parseFloat($(this).find('.txtAmountoCollect').val());
                    SupplyOrderRequest.EstimatedAmount = isNaN(CollectedAmount) ? null : CollectedAmount;
                    SupplyOrderRequest.CollectionDate = !$(this).find(".txtCollectionDate input[type=text]").val() ? null : $(this).find(".txtCollectionDate input[type=text]").val();
                    SupplyOrderRequest.Note = !$(this).find(".txtSoNote").val() ? null : $(this).find(".txtSoNote").val();
                    if (SupplyOrderRequest) listSupplyOrderRequest.push(SupplyOrderRequest);
                });
                return listSupplyOrderRequest;
            },
            sendSMS: function (response) {
                var smsRequest = supplyorder.getSMSrequest(response);
                window.location.href = "https://rest.nexmo.com/sms/xml?api_key=a04d07fb&api_secret=83bfa18e&from=Admin&to=" + response.mobileNo + "&text=" + response.responseMsg;

                $.ajax({
                    url: response.url,
                    type: "POST",
                    data: JSON.stringify(smsRequest),
                    headers: { "Authorization": response.authorization },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        winViewItem.close();
                        alert("You will get a quick SMS");
                    }, error: function (response) {
                        console.log(response);
                    }
                });
            },
            getSMSrequest: function (response) {
                var smsRequest = new Object();
                smsRequest.from = response.from;
                smsRequest.to = response.mobileNo;
                smsRequest.text = response.responseMsg;
                return smsRequest;
            },
            clearSupplyOrderData: function () {
                $("#soFarmerName").text('');
                $("#soSugerMillName").text('');
                $("#soPlantRatoon").text('');
                $("#soLandArea").text('');
                $("#soTotalEstimatedAmount").text('');
                $("#txtAmountoCollect").val('');
                $("#txtCollectionDate").val('');
                $("#txtSoNote").val('');

                $("#soeFarmerName").text('');
                $("#soeSugerMillName").text('');
                $("#soePlantRatoon").text('');
                $("#soeLandArea").text('');
                $("#soeTotalEstimatedAmount").text('');
                $('#cbIsCollected').prop('checked', '');
            },
            loadTodaysSupplyOrder: function () {
                if (supplyDatatable != null) {
                    $('#tableSupplyOrder').empty();
                }
                supplyDatatable = $("#tableSupplyOrder").DataTable({
                    bDestroy: true,
                    ajax: {
                        url: '@Url.Action("GetTodaysCollectionOrders", "SugerMill")',
                        type: "GET",
                    },
                    columnDefs: [
                        { targets: 0, data: "Code" },
                        { targets: 1, data: "FarmerName", orderable: true },
                        { targets: 2, data: "MobileNo", orderable: false },
                        { targets: 3, data: "SugerMillName", orderable: false },
                        { targets: 4, data: "AmounttoCollect", orderable: false },
                        { targets: 5, data: "CollectedAmount", orderable: false },
                        { targets: 6, data: "CollectionDate", render: function (data, type, row) { return data ? utility.dtConvFromJSON(data) : '' } },
                        { targets: 7, data: "IsCollected", orderable: false },
                        { targets: 8, data: "Note", orderable: false },
                        {
                            data: null,
                            targets: 9,
                            searchable: false,
                            orderable: false,


                            render: function (data, type, full, meta) {
                                return '<input type="checkbox" class="siTSOCB" name="id[]" value="' + $('<div/>').text(data).html() + '">';
                            }
                        },
                    ],
                    order: [[1, "asc"]],
                    lengthChange: true,
                    lengthMenu: [[5, 10, 25, -1], [10, 10, 25, "All"]]
                });
            }
        }

        function SetupAnnouncementsDataTable() {

            var datatable2;
            if (datatable2 != null) {
                datatable2.fnDestroy();
                $('#tableSupplyOrder1').empty();
            }
            datatable2 = $("#tableSupplyOrder1").DataTable({
                bDestroy: true,
                bFilter: false,
                initComplete: function (settings, json) {
                    supplyOrder1.initTodaysSupplyOrderCheckBox(datatable2);
                },
                ajax: {
                    url: '@Url.Action("GetTodaysCollectionOrders", "SugerMill")',
                    type: "GET",
                },
                columnDefs: [
                    { targets: 0, data: "Code" },
                    { targets: 1, data: "FarmerName", orderable: true },
                    { targets: 2, data: "MobileNo", orderable: false },
                    { targets: 3, data: "SugerMillName", orderable: false },
                    { targets: 4, data: "AmounttoCollect", orderable: false },
                    { targets: 5, data: "CollectedAmount", orderable: false },
                    {
                        targets: 6, data: "CollectionDate", render: function (data, type, row) {
                            return FormatDateValue(ParseJsonDate(data), { "format": "dd/MM/yyyy hh:mm tt" });
                        }
                    },
                    { targets: 7, data: "IsCollected", orderable: false },
                    { targets: 8, data: "Note", orderable: false },
                    {
                        targets: 9, data: null, render: function (data, type, full, meta) {
                            return '<input type="checkbox" class="childCB" name="id[]" value="' + $('<div/>').text(data).html() + '">';
                        }
                    },
                ],
                order: [[1, "asc"]],
                lengthChange: true,
                lengthMenu: [[5, 10, 25, -1], [10, 10, 25, "All"]]
            });
            new $.fn.dataTable.Buttons(datatable2, [
                                                 {
                                                     text: 'Send Sms',
                                                     action: function (e, dt, node, config) {
                                                         supplyOrder1.sendBulkSMSsO(datatable2, '@Url.Action("DeleteSupplyOrder", "SugerMill")', null, function (response) {
                                                             SetupAnnouncementsDataTable();
                                                         });
                                                     }
                                                 },
                                                 {
                                                     text: 'Delete',
                                                     action: function (e, dt, node, config) {
                                                         supplyOrder1.deleteBulkSO(test, '@Url.Action("DeleteSupplyOrder", "SugerMill")');
                                                     }
                                                 },
                                               {
                                                   extend: 'excel',
                                                   text: '<span class="fa fa-file-excel-o"></span> Excel',
                                                   exportOptions: {
                                                       modifier: {
                                                           search: 'applied',
                                                           order: 'applied'
                                                       }
                                                   }
                                               },
                                               {
                                                   extend: 'pdf',
                                                   text: '<span class="fa fa-file-pdf-o"></span> PDF',
                                                   exportOptions: {
                                                       modifier: {
                                                           search: 'applied',
                                                           order: 'applied'
                                                       }
                                                   }
                                               },
                                                  {
                                                      extend: 'print',
                                                      text: '<span class="fa fa-print"></span> Print',
                                                      exportOptions: {
                                                          modifier: {
                                                              search: 'applied',
                                                              order: 'applied'
                                                          }
                                                      }
                                                  }
            ]);

            datatable2.buttons().container().appendTo($('.col-sm-6:eq(0)', datatable2.table().container()));
            datatable2.buttons().container().appendTo('#tableSupplyOrder1_filter');
        }
    </script>
}
